:Class Relation
⍝ represents a relation with fields, data, primary key(s)
⍝ and optional foreign key(s)
    :Field Public Name
    :Field Public Fields
    :Field Public Data
    zip ← #.zip

    ∇ Insert row;zipped;erow
      :Access Public Instance
      zipped←zip Data
      erow←⊂row
      :If erow∊zipped
          'duplicate row is not alowed'⎕SIGNAL 11
      :EndIf
      Data←zip(⊂row)⍪⍨zip Data
    ∇

    ∇ r←Display
      :Access Public Instance
      r←Fields⍪⍉↑Data
    ∇

    ∇ r←RowCount;col1
      :Access Public Instance
      r←⍬⍴⍴1⊃Data
    ∇

    ∇ r←Rows
      :Access Public Instance
      r←zip Data
    ∇

    ∇ r←new_name Project new_fields
      :Access Public Instance
    ⍝ return a relation containing the selected fields
    ⍝ and corresponding data
      r←new_name #.relation new_fields
      r.Insert¨zip Data[Fields⍳new_fields]
    ∇

    ∇ r←new_name Select boolean;nd
      :Access Public Instance
      r←new_name #.relation Fields
      nd←zip boolean/zip Data
      r.Data←nd
    ∇

    ∇ r←name Join other;shared_fields
      :Access Public Instance
      shared_fields←Fields∩other.Fields
      my_shared_values←zip Data[Fields⍳shared_fields]
      ⍝ should check these are unique
      other_shared_values←zip other.Data[other.Fields⍳shared_fields]
      ⍝ should check these are unique
      r←name #.relation∪Fields,other.Fields
      my_data_mask←my_shared_values∊other_shared_values
      my_data←my_data_mask/zip Data
      other_data_mask←other_shared_values∊my_shared_values
      other_data←other_data_mask/zip(⍴shared_fields)↓other.Data
      r.Insert¨my_data,¨other_data
    ∇

:EndClass ⍝ Relation
